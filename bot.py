import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import (
    Message, ReplyKeyboardMarkup, KeyboardButton,
    InputMediaPhoto, InputMediaVideo
)

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù"
ADMIN_CHAT_ID = -1002404070892  # ID –≥—Ä—É–ø–ø—ã —Å —Ç–µ–º–∞–º–∏
TOPIC_MATERIAL = 12              # ID —Ç–æ–ø–∏–∫–∞ ¬´–í —Ä–∞–±–æ—Ç–µ¬ª
TOPIC_QUESTION = 10              # ID —Ç–æ–ø–∏–∫–∞ ¬´–í–æ–ø—Ä–æ—Å—ã¬ª

# üîß –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å)
TEXT_MATERIAL = "üì∏ –û—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ. –í—Å—ë, —á—Ç–æ —Ç—ã –ø—Ä–∏—à–ª—ë—à—å, –ø–æ–ø–∞–¥—ë—Ç –≤ —Ç–µ–º—É '–í —Ä–∞–±–æ—Ç–µ'."
TEXT_QUESTION = "üí¨ –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ –æ–Ω –ø–æ—è–≤–∏—Ç—Å—è –≤ —Ç–µ–º–µ '–í–æ–ø—Ä–æ—Å—ã'."
TEXT_BACK = "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤—è–∑–∏ {message_id_–≤_—Ç–æ–ø–∏–∫–µ: user_id}
message_links = {}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üì∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª")],
        [KeyboardButton(text="üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")]
    ],
    resize_keyboard=True
)

# –ú–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
back_menu = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text=TEXT_BACK)]],
    resize_keyboard=True
)

# /start
@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:", reply_markup=main_menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ú–∞—Ç–µ—Ä–∏–∞–ª"
@dp.message(lambda m: m.text == "üì∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª")
async def send_material_info(message: Message):
    await message.answer(TEXT_MATERIAL, reply_markup=back_menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–í–æ–ø—Ä–æ—Å"
@dp.message(lambda m: m.text == "üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
async def send_question_info(message: Message):
    await message.answer(TEXT_QUESTION, reply_markup=back_menu)

# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
@dp.message(lambda m: m.text == TEXT_BACK)
async def go_back(message: Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–¥–∏–∞/—Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message()
async def handle_user_message(message: Message):
    user_info = f"{message.from_user.full_name} (@{message.from_user.username or '–±–µ–∑_username'}) (id={message.from_user.id})"

    # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ
    if message.photo or message.video:
        media_group = []
        if message.photo:
            media_group.append(InputMediaPhoto(media=message.photo[-1].file_id))
        elif message.video:
            media_group.append(InputMediaVideo(media=message.video.file_id))

        sent_messages = await bot.send_media_group(
            chat_id=ADMIN_CHAT_ID,
            message_thread_id=TOPIC_MATERIAL,
            media=media_group
        )
        # –û—Ç–ø—Ä–∞–≤–∏–º –ø–æ–¥–ø–∏—Å—å –æ—Ç–¥–µ–ª—å–Ω–æ
        msg = await bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=f"üì∏ –ú–∞—Ç–µ—Ä–∏–∞–ª –æ—Ç {user_info}",
            message_thread_id=TOPIC_MATERIAL
        )
        message_links[msg.message_id] = message.from_user.id

    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç (–≤–æ–ø—Ä–æ—Å)
    elif message.text:
        msg = await bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=f"‚ùì –í–æ–ø—Ä–æ—Å –æ—Ç {user_info}:\n{message.text}",
            message_thread_id=TOPIC_QUESTION
        )
        message_links[msg.message_id] = message.from_user.id

# üîπ –û—Ç–≤–µ—Ç—ã –∞–¥–º–∏–Ω–∞ –≤ —Ç–æ–ø–∏–∫–∞—Ö
@dp.message(lambda m: m.chat.id == ADMIN_CHAT_ID)
async def admin_reply(message: Message):
    if message.reply_to_message and message.reply_to_message.message_id in message_links:
        user_id = message_links[message.reply_to_message.message_id]
        try:
            if message.text:
                await bot.send_message(user_id, f"üì© –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n{message.text}")
            elif message.photo:
                await bot.send_photo(user_id, message.photo[-1].file_id, caption="üì© –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏")
            elif message.video:
                await bot.send_video(user_id, message.video.file_id, caption="üì© –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")

# üîπ –ó–∞–ø—É—Å–∫
async def main():
    logging.info("[BOT] –ó–∞–ø—É—Å–∫...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
